{"ast":null,"code":"import express from 'express';\nimport { contacts } from './contacts';\nvar router = express.Router();\nrouter.get('/', function (req, res) {\n  res.send({\n    contacts: contacts\n  });\n});\nrouter.post('/', function (req, res) {\n  var newContact = req.body;\n\n  if (newContact) {\n    contacts.push({\n      name: newContact.name,\n      address: newContact.address,\n      phone_number: newContact.phone_number\n    });\n    res.status(201).send({\n      message: \"Contact Created\"\n    });\n  } else {\n    res.status(400).send({\n      message: \"Unable to find Contact in request. No Contact Found in body\"\n    });\n  }\n});\nexport default router; // Update a contact\n\nrouter.put('/:id', function (req, res) {\n  var key = req.params.id;\n  var updateContact = req.body;\n  var index = contacts.map(function (contact) {\n    return contact.phone_number;\n  }).indexOf(key);\n\n  if (index !== -1) {\n    contacts.splice(index, 1, {\n      name: updateContact.name,\n      address: updateContact.address,\n      phone_number: updateContact.phone_number\n    });\n    res.status(200).send({\n      message: 'Contact Updated'\n    });\n  } else {\n    res.status(400).send({\n      message: 'Unable to find Contact in request. No Contact Found in body'\n    });\n  }\n}); // Delete a contact\n\nrouter.delete('/:id', function (req, res) {\n  var key = req.params.id;\n  var index = contacts.map(function (contact) {\n    return contact.phone_number;\n  }).indexOf(key);\n\n  if (index > -1) {\n    contacts.splice(index, 1);\n    res.status(200).send({\n      message: \"Deleted contact with phone_number: \".concat(key, \".\")\n    });\n  } else {\n    res.status(400).send({\n      message: \"Unable to find contact with phone_number: \".concat(key, \".\")\n    });\n  }\n});","map":{"version":3,"sources":["/Users/brianwfrazier/Downloads/dartStats/src/api/contacts/index.js"],"names":["express","contacts","router","Router","get","req","res","send","post","newContact","body","push","name","address","phone_number","status","message","put","key","params","id","updateContact","index","map","contact","indexOf","splice","delete"],"mappings":"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","sourcesContent":["import express from 'express';\nimport {contacts} from './contacts';\n\n\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  res.send({ contacts: contacts });\n});\n\nrouter.post('/', (req, res) => {\n        let newContact = req.body;\n        if (newContact){\n          contacts.push({name: newContact.name, address: newContact.address, phone_number: newContact.phone_number }) ;\n          res.status(201).send({message: \"Contact Created\"});\n      }else{\n            res.status(400).send({message: \"Unable to find Contact in request. No Contact Found in body\"});\n      }\n});\n\nexport default router;\n\n// Update a contact\nrouter.put('/:id', (req, res) => {\n  const key = req.params.id;\n  const updateContact = req.body;\n  const index = contacts.map((contact)=>{\nreturn contact.phone_number;\n}).indexOf(key);\n         if (index !== -1) {\n            contacts.splice(index, 1, {name: updateContact.name, address: updateContact.address,\n            phone_number: updateContact.phone_number});\n            res.status(200).send({message: 'Contact Updated'});\n           } else {\n       res.status(400).send({message: 'Unable to find Contact in request. No Contact Found in body'});\n   }\n});\n\n// Delete a contact\nrouter.delete('/:id', (req, res) => {\n  const key = req.params.id;\n  const index = contacts.map((contact)=>{\nreturn contact.phone_number;\n}).indexOf(key);\n if (index > -1) {\ncontacts.splice(index, 1);\n     res.status(200).send({message: `Deleted contact with phone_number: ${key}.`});\n } else {\n   res.status(400).send({message: `Unable to find contact with phone_number: ${key}.`});\n   }\n});"]},"metadata":{},"sourceType":"module"}